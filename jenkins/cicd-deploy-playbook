pipeline {
    agent any
     environment {
            TOMCAT_HOST = 'localhost'
            DOCKER_REGISTRY = 'buntatiba'
            DOCKER_IMAGE = "xyztechnologies:${BUILD_NUMBER}"
     }
    stages {
        stage('compile') {
	         steps {
                // step1 
                echo 'compiling..'
		            git branch: 'main', url: 'https://github.com/buntatiba/XYZ-Technologies'
		            sh script: '/opt/maven/bin/mvn compile'
           }
        }
        stage('codereview-pmd') {
	         steps {
                // step2
                echo 'codereview..'
		            sh script: '/opt/maven/bin/mvn -P metrics pmd:pmd'
           }
	         post {
               success {
		             recordIssues enabledForFailure: true, tool: pmdParser(pattern: '**/target/pmd.xml')
               }
           }		
        }
        stage('unit-test') {
	          steps {
                // step2
                echo 'unittest..'
	               sh script: '/opt/maven/bin/mvn test'
            }
	          post {
               success {
                   junit 'target/surefire-reports/*.xml'
               }
            }			
        }
        stage('codecoverage') {
	   steps {
                echo 'unittest..'
	        sh script: '/opt/maven/bin/mvn verify'
                 }
	   post {
               success {
                   jacoco buildOverBuild: true, deltaBranchCoverage: '20', deltaClassCoverage: '20', deltaComplexityCoverage: '20', deltaInstructionCoverage: '20', deltaLineCoverage: '20', deltaMethodCoverage: '20'
               }
           }			
        }
        stage('package/build-war') {
	         steps {
                // step3
                echo 'package......'
		            sh script: '/opt/maven/bin/mvn package'	
           }		
        }
        stage('build & push docker image') {
	         steps {
	             script{
              withDockerRegistry(credentialsId: 'dockerhup', toolName: 'Docker') {
                sh """
                    cd $WORKSPACE
                    docker build --file Dockerfile --tag docker.io/buntatiba/xyztechnologies:$BUILD_NUMBER .
                    docker push docker.io/buntatiba/xyztechnologies:$BUILD_NUMBER
                """
              }
	             }
	         }
        }
      //  stage('Deploy to Tomcat') {
        //    steps {
          //         deploy adapters: [tomcat9(credentialsId: 'tomcat-cred', path: '', url: 'http://34.125.248.14:8181/')], contextPath: 'XYZtechnologies-1.0', war: '**/*.war'
         //   }
       // }
        stage('Deploy to container') {
            steps {
                script {
                     Pull the Docker image from the registry
                    sh "docker pull ${DOCKER_REGISTRY}/${DOCKER_IMAGE}"

                     Run the Docker container on Tomcat
                    sh "docker run -d --name xyztechnologies-$BUILD_NUMBER -p 8183:8181 ${DOCKER_REGISTRY}/${DOCKER_IMAGE}"
                }
            }
        }
    }
}
        
    